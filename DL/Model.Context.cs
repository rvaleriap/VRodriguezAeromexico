//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VRodriguezAeromexicoEntities : DbContext
    {
        public VRodriguezAeromexicoEntities()
            : base("name=VRodriguezAeromexicoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Login> Logins { get; set; }
        public virtual DbSet<Pasajero> Pasajeroes { get; set; }
        public virtual DbSet<Vuelo> Vueloes { get; set; }
        public virtual DbSet<VueloPasajero> VueloPasajeroes { get; set; }
    
        public virtual int LoginAdd(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoginAdd", userNameParameter, passwordParameter);
        }
    
        public virtual int PasajeroAdd(string nombre, string apellidoPaterno, string apellidoMaterno)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PasajeroAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter);
        }
    
        public virtual int VueloAdd(string numVuelo, string origen, string destino, string fechaSalida)
        {
            var numVueloParameter = numVuelo != null ?
                new ObjectParameter("NumVuelo", numVuelo) :
                new ObjectParameter("NumVuelo", typeof(string));
    
            var origenParameter = origen != null ?
                new ObjectParameter("Origen", origen) :
                new ObjectParameter("Origen", typeof(string));
    
            var destinoParameter = destino != null ?
                new ObjectParameter("Destino", destino) :
                new ObjectParameter("Destino", typeof(string));
    
            var fechaSalidaParameter = fechaSalida != null ?
                new ObjectParameter("FechaSalida", fechaSalida) :
                new ObjectParameter("FechaSalida", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VueloAdd", numVueloParameter, origenParameter, destinoParameter, fechaSalidaParameter);
        }
    
        public virtual int VueloReservado(Nullable<int> idVuelo, Nullable<int> idPasajero)
        {
            var idVueloParameter = idVuelo.HasValue ?
                new ObjectParameter("IdVuelo", idVuelo) :
                new ObjectParameter("IdVuelo", typeof(int));
    
            var idPasajeroParameter = idPasajero.HasValue ?
                new ObjectParameter("IdPasajero", idPasajero) :
                new ObjectParameter("IdPasajero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VueloReservado", idVueloParameter, idPasajeroParameter);
        }
    
        public virtual ObjectResult<GetAllVuelo_Result> GetAllVuelo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllVuelo_Result>("GetAllVuelo");
        }
    
        public virtual ObjectResult<UserGetById_Result> UserGetById(string userName, string passWord)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passWordParameter = passWord != null ?
                new ObjectParameter("PassWord", passWord) :
                new ObjectParameter("PassWord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserGetById_Result>("UserGetById", userNameParameter, passWordParameter);
        }
    
        public virtual int VueloAsignado(Nullable<int> idVuelo, Nullable<int> idPasajero)
        {
            var idVueloParameter = idVuelo.HasValue ?
                new ObjectParameter("IdVuelo", idVuelo) :
                new ObjectParameter("IdVuelo", typeof(int));
    
            var idPasajeroParameter = idPasajero.HasValue ?
                new ObjectParameter("IdPasajero", idPasajero) :
                new ObjectParameter("IdPasajero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VueloAsignado", idVueloParameter, idPasajeroParameter);
        }
    }
}
